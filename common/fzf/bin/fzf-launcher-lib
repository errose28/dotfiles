#!/usr/bin/env bash

DEFAULT_SECTION="$1"
SECTION_FILE='/tmp/fzf_launcher_section'
# 1st column is the value that should be used when selected, but not displayed to the user.
# Everything after is displayed in fzf.
OPTIONS=(--with-nth \'2..\')
COMMAND='true'

launch_fzf() {
    export FZF_DEFAULT_COMMAND="$COMMAND"
    export FZF_DEFAULT_OPTS="${OPTIONS[@]}"

    output="$(fzf-window)"

    # Only proceed if output was selected.
    if [ "$output" ]; then
        section="$(cat "$SECTION_FILE")"
        # First line query entered.
        query="$(echo "$output" | awk 'FNR==1')"
        # Second line is user selection. First word of that should be used to execute.
        selection="$(echo "$output" | awk 'FNR==2 {print $1}')"

        QUERY="$query" SELECTION="$selection" ${SECTION_TO_CMD["$section"]}
    fi

    rm "$SECTION_FILE"
}

add_section() {
    keybinding="$1"
    prompt="$2"
    command="$3"

    # Put the prompt in front of each selection.
    # cmd_array=($command '|' ts "$prompt")

    # Save command to be run so its output can be streamed to fzf.
    OPTIONS+=(--bind="'$keybinding:change-prompt(${prompt}: )+reload("$command")+execute-silent(echo "$prompt" > "$SECTION_FILE")'")

    SECTION_TO_CMD["$prompt"]="$command"

    if [ "$prompt" = "$DEFAULT_SECTION" ]; then
        # COMMAND="${cmd_array[@]}"
        COMMAND="$command"
        OPTIONS+=(--prompt "'${prompt}: '")
        echo "$prompt" > "$SECTION_FILE"
    fi
}
